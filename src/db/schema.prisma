generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  student
  teacher
}

model User {
  id                Int      @id @default(autoincrement())
  avatar            String?
  email             String   @unique
  username          String   @unique
  birthday          DateTime
  password          String
  policyAccepted    Boolean
  remindersAccepted Boolean  @default(false)
  role              UserRole @default(student)

  flashcardSets FlashcardSet[]
  folders Folder[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model FlashcardSet {
  id          Int         @id @default(autoincrement())
  title       String
  description String?

  flashcards  Flashcard[]
  user   User @relation(fields: [userId], references: [id])
  userId Int
  folder   Folder? @relation(fields: [folderId], references: [id])
  folderId Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Flashcard {
  id             Int           @id @default(autoincrement())
  term           String
  definition     String
  imagePath      String?

  isStarred Boolean @default(false)

  flashcardSet   FlashcardSet @relation(fields: [flashcardSetId], references: [id])
  flashcardSetId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Folder {
  id Int @id @default(autoincrement())
  title String

  flashcardSets FlashcardSet[]
  user   User @relation(fields: [userId], references: [id])
  userId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
